# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: ReleaseCI

on:
  push:
    tags:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    #Setup Java 11
    - name: Set up Java 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # Install dependencies needed to compile Rust
    - name: Install extra dependencies
      run: sudo apt-get update -y && sudo apt-get install make gcc gcc-mingw-w64
    - name: Install Cargo and Rustup
      run: sudo curl https://sh.rustup.rs -sSf | sudo sh -s -- -y
    - name: Install Rustup x86_64 Windows toolchain
      run: rustup toolchain install stable-x86_64-pc-windows-gnu
    - name: Install Rustup x86_64 Linux toolchain
      run: rustup toolchain install stable-x86_64-unknown-linux-gnu
    - name: Install Rustup x86_64 Windows target
      run: rustup target install x86_64-pc-windows-gnu
    - name: Install Rustup x86_64 Linux target
      run: rustup target install x86_64-unknown-linux-gnu

    #Docker
    - name: Install dependencies for Docker
      run: sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
    - name: Docker GPG Key
      run: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    - name: Docker APT repository
      run: echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    - name: Install Docker
      run: sudo apt-get update -y && sudo apt-get install -y docker-ce docker-ce-cli containerd.io

    #Build MacOS Dynamic library
    - name: Build MacOS library
      run: docker run -it -v "${pwd}:/app/" registry.thedutchmc.nl/librconsole-macos-builder:latest

    #Build
    - name: Build
      run: make ghactions 
    
    #Create a release
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    
    #Extract version number
    - name: Extract version number
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    #Extract repository name
    - name: Extract repository name
      run: echo "REPOSITORY_NAME=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//")" >> $GITHUB_ENV
    
    #Attach compiled JAR to Releases
    - name: Attach JAR to Release
      id: upload_release_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
         upload_url: ${{ steps.create_release.outputs.upload_url }}
         asset_path: actions/output.jar
         asset_name: ${{ env.REPOSITORY_NAME }}-${{ env.RELEASE_VERSION }}-RELEASE.jar
         asset_content_type: application/java-archive
