# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Release CI

on:
  push:
    tags:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    #Setup Java 11
    - name: Set up Java 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # Install dependencies needed to compile Rust
    - name: Install extra dependencies
      run: sudo apt-get update -y && sudo apt-get install make gcc gcc-mingw-w64
    - name: Install Cargo and Rustup
      run: sudo curl https://sh.rustup.rs -sSf | sudo sh -s -- -y
    - name: Install Rustup x86_64 Windows toolchain
      run: rustup toolchain install stable-x86_64-pc-windows-gnu
    - name: Install Rustup x86_64 Linux toolchain
      run: rustup toolchain install stable-x86_64-unknown-linux-gnu
    - name: Install Rustup x86_64 Windows target
      run: rustup target install x86_64-pc-windows-gnu
    - name: Install Rustup x86_64 Linux target
      run: rustup target install x86_64-unknown-linux-gnu

    #MacOS
    - name: APT dependencies for MacOS
      run: apt install clang g++ zlib1g-dev libmpc-dev libmpfr-dev libgmp-dev
    - name: Install Rustup x86_64 MacOS target
      run: rustup target add x86_64-apple-darwin
    - name: Configure Cargo
      uses: DamianReeves/write-file-action
      with:
        path: ${{ env.home}}/.cargo/config
        contents: |
          [target.x86_64-apple-darwin]
          linker = "x86_64-apple-darwin14-clang"
          ar = "x86_64-apple-darwin14-ar"
        write-mode: append
    - name: Clone OSXCross
      run: git clone https://github.com/tpoechtrager/osxcross /tmp/osxcross/
    - name: Download MacOS SDK
      run: wget https://s3.dockerproject.org/darwin/v2/MacOSX10.11.sdk.tar.xz -O /tmp/osxcross/
    - name: Move MacOS SDK to Tarballs
      run: mv /tmp/osxcross/MacOSX10.11.sdk.tar.xz /tmp/osxcross/tarballs/
    - name: Sed in build.sh
      run: cd /tmp/osxcross && sed -i -e 's|-march=native||g' build_clang.sh build.sh
    - name: Build OSXCross
      run: cd /tmp/osxcross && UNATTENDED=yes OSX_VERSION_MIN=10.7 ./build.sh
    - name: Make OSX NDK Directory
      run: sudo mkdir -p /usr/local/osx-ndk-x86
    - name: Copy OSX NDK
      run: sudo cp -r target/* /usr/local/osx-ndk-x86

    #Build
    - name: Build
      run: make ghactions 
    
    #Create a release
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    
    #Extract version number
    - name: Extract version number
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    #Extract repository name
    - name: Extract repository name
      run: echo "REPOSITORY_NAME=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//")" >> $GITHUB_ENV
    
    #Attach compiled JAR to Releases
    - name: Attach JAR to Release
      id: upload_release_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
         upload_url: ${{ steps.create_release.outputs.upload_url }}
         asset_path: actions/output.jar
         asset_name: ${{ env.REPOSITORY_NAME }}-${{ env.RELEASE_VERSION }}-RELEASE.jar
         asset_content_type: application/java-archive
